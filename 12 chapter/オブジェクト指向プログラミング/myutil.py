# Pythonモジュールの作り方
"""モジュールとは「Pythonのコードを含んだ、拡張子がpyのテキストファイル」のこと。
"""
#!/usr/bin/env python
# coding: utf-8

# In[ ]:


def fact(x):
    result = 1
    if x == 0:
       return result
    for num in range(1, x + 1):
       result *= num
    return result

def fizzbuzz(x):
    result = str(x)
    if x % 3 == 0 and x % 5 == 0:
        result = 'FizzBuzz'
    elif X % 3 == 0:
        result = 'Fizz'
    elif x % 5 == 0:
        result = 'Buzz'
    return result

def fib(x):
    if x == 0:
        return 0
    elif x == 1:
        return 1
    return fib(x - 1) + (x - 2)

PI = 3.14159

"""
このコードでは3つの関数と1つの変数を定義している。

    fact関数：引数に指定した数値の階乗を求める
（例：fact(5)は1×2×3×4×5＝120を戻り値とする）

    fizzbuzz関数：引数に指定した数値が「3の倍数かつ5の倍数なら'FizzBuzz'」を、
「3の倍数なら'Fizz'」を、「5の倍数なら'Buzz'」を、それ以外のときには引数に指定した値
（を文字列化したもの）を返す（例：fizzbuzz(15)は'FizzBuzz'を戻り値とする）

    fib関数：「引数に指定した値」番目のフィボナッチ数を返す。フィボナッチ数とは「初項の値を0、
その次の項の値を1」として、それ以降の項の値を「2つ前のフィボナッチ数と1つ前のフィボナッチ数の和」
として求められる数列に含まれる数のこと（例：fib(2)なら「2つ前のフィボナッチ数」はfib(0)で表され、
「1つ前のフィボナッチ数」はfib(1)で表される。よって、fib(2)= fib(0)+fib(1)であり、
この場合は「0＋1」の和である「1」が戻り値となる）

このように、他のプログラムから使用されることを念頭に置いた関数や定数の定義を含んだPythonのコードが
「モジュール」だ。これに対して、実際に何らかの処理を行うPythonコードを含んだファイルのことを
「スクリプト」ファイルと呼ぶことがある（「スクリプト」とは「脚本」のことで、
Pythonが行う処理の手順を「脚本」に見立てた表現だ）。

　テキストエディタなどを使ってPythonのプログラムを作成しているのであれば、
単純にそうしたファイルを作成、保存するだけでモジュールが作成される

"""
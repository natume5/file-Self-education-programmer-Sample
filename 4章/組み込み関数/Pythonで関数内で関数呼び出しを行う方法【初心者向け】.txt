関数の呼び出しとは


関数は一連の処理をまとめたものです。

Pythonには組み込み関数とユーザ定義関数があります。

いずれの関数も以下の形式(funcは関数名)で呼び出せます。

func()

かっこ内に引数をとれる関数もあります。




関数内で関数呼び出しを行う方法(ネスト構造の関数における呼び出し)


Pythonでは関数内で関数を定義できます。

普通に関数を定義する場合と同様に、defキーワードを用います。

def outer_function():
    # 外側の関数の定義

    def inner_function():
        # 内側の関数の定義

    inner_function() # これはOK

inner_function() # これはNG

上の例のように、外側の関数内から内側の関数を呼び出せます。

一方で、スコープ外のため外側の関数外から内側の関数を呼び出せません(内側の関数は隠蔽されています)。




実際に書いてみよう
サンプルコード

def make_adder():
    print('加算関数を作成します')
    def add(x, y):
        z = x + y
        print('%d + %d = %d' % (x, y, z))
        return x + y
    return add

a = make_adder()
ans = a(1, 2)
print(ans)

 
実行結果

加算関数を作成します
1 + 2 = 3
3
 
解説

1行目で外側の関数make_adderを宣言します。

3行目で内側の関数addを宣言します。
addは引数2つの和を返す関数です。

7行目がmake_adder関数の返り値で、add関数を関数オブジェクトとして返します。

9行目でmake_adder関数を呼び出し、戻り値を変数aに割り当てます。

10行目で変数a(関数オブジェクト)により、add関数を呼び出します。

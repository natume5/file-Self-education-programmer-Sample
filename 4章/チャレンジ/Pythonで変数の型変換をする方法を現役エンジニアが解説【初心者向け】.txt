型変換（型キャスト）とは

型変換とは、その名のとおりデータ型を指定した型に変換することです。

例えば、文字列を数値に変換してその後の計算に使用するといった場面でよく使用されます。



型変換の方法

型変換の方法について実際に見ていきましょう。

 

整数への型変換

整数への型変換には組み込み関数のint()を使用します。

 

浮動小数点数への型変換

浮動小数点数への型変換には組み込み関数のfloat()を使いましょう。

 

文字列への型変換

浮動小数点数への型変換にはstr()という組み込み関数を使いましょう。

ちなみにstrはStringの略です。

他にも様々な型へのキャストがあるものの、今回紹介したものを理解できれば問題ないといえるでしょう。



実際に書いてみよう

ここでは、実際にコードを書いて解説していきます。
整数への型変換

まずは、型変換を実施しないで計算してみましょう。

>>>num = "1"
>>>ans = num + 2
>>>print(ans)
TypeError   Traceback (most recent call last)
<ipython-input-1-1db5bd3d488b> in <module>
      1 num = "1"
----> 2 ans = num + 2
      3 print(ans)
 TypeError: can only concatenate str (not "int") to str

実行すると、TypeErrorエラーという名前のエラーになりました。

エラー名からも推察できる通り、型のエラーとして「文字列型なので計算できない。」という結果になりました。

次に、文字列から整数への変換を実施してから計算を行います。

>>>num = int("1")
>>>ans = num + 2
>>>print(ans)
3

このコードでは、無事にプログラムを実行できました。

また、文字列だけでなく、float型→int型についても同様に変換を行うことが可能です。




浮動小数点数への型変換

文字列から浮動小数点数への型変換も行うことができます。

>>>num = float("1.2")
>>>ans = num + 2.4
>>>print(ans)
3.6
 

また、Pythonにおける割り算の結果は必ずfloat型にキャストされるというルールを覚えておきましょう。

以下のコードを実行してみます。

>>>a = 4/2
>>>print(a)
>>>type(a)
2.0
float

上の例では4も2もどちらもint型であるため、計算結果は一見するとint型の2が返るように思われるでしょう。

足し算、引き算、掛け算の場合はint型になります。

しかし、割り算だけは暗黙的型変換と呼ばれ、float型にキャストされます。



文字列への型変換

最後は文字列への型変換を見ていきましょう。

>>>b = 1
>>>print(type(b))
>>>b = str(b)
>>>print(type(b))
<class 'int'><class 'str'>

str型に変換されたことが確認できましたね。
